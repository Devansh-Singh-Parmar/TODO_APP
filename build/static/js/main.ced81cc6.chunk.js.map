{"version":3,"sources":["background cut.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","src","logo","width","height","className","text","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","type","name","checked","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,MAA0B,2C,eC0F1BA,E,kDArFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAJS,E,2CAQnB,SAAQC,GACN,GAAkB,KAAdA,EAAkB,CACpB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAKf,SAAWG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KACpDK,KAAKE,SAAS,CAAET,KAAMU,M,yBAGxB,SAAYG,GACVN,KAAKE,SAAS,CAAEV,QAASc,M,oBAG3B,WAAU,IAAD,OACP,OACE,gCACE,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,SACnD,oBAAIA,UAAU,YAAd,8BACA,sBAAKA,UAAU,YAAf,2BAEE,uBACA,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,eACZC,UAAQ,EACRhB,MAAOE,KAAKT,MAAMC,QAClBuB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOpB,UAE3C,wBACCa,UAAU,UACVQ,QAAS,kBAAM,EAAKC,QAAQ,EAAK7B,MAAMC,UACvC6B,UAAWrB,KAAKT,MAAMC,QAAQ8B,OAH/B,wBAKA,qBAAKX,UAAU,OAAf,SACE,+BACGX,KAAKT,MAAME,KAAK8B,KAAI,SAAAlB,GACnB,OACE,+BACE,uBACCmB,KAAK,WACLC,KAAK,SACLC,QAASrB,EAAKN,OACdgB,SAAU,eAERV,EAAKP,MACN,wBAAQa,UAAU,MAAMQ,QAAS,kBAAM,EAAKQ,WAAWtB,EAAKV,KAA5D,sBARKU,EAAKV,OAYlB,+BACE,uBAAO6B,KAAK,WAAWC,KAAK,GAAG9B,GAAG,KADpC,kBAGE,wBAAQgB,UAAU,MAAlB,sC,GA5EEiB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ced81cc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background cut.d1b472bb.png\";","import React from \"react\";\nimport logo from \"./background cut.png\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: [],\n    };\n  }\n\n  addItem(todoValue) {\n    if (todoValue !== \"\") {\n      const newItem = {\n        id: Date.now(),\n        value: todoValue,\n        isDone: false,\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\",\n      });\n    }\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id);\n    this.setState({ list: updatedlist });\n  }\n\n  updateInput(input) {\n    this.setState({ newItem: input });\n  }\n\n  render() {\n    return (\n      <div>\n        <img src={logo} width=\"120\" height=\"100\" className=\"logo\"></img>\n        <h1 className=\"app-title\">Devansh TODO App</h1>\n        <div className=\"container\">\n          Add an item...\n          <br />\n          <input\n            text=\"text\"\n            className=\"input-text\"\n            placeholder=\"Write a todo\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}\n          />\n          <button\n           className=\"add-btn\"\n           onClick={() => this.addItem(this.state.newItem)}\n           disabled={!this.state.newItem.length}\n           >Add a TODO</button>\n          <div className=\"list\">\n            <ul>\n              {this.state.list.map(item => {\n                return(\n                  <li key={item.id}>\n                    <input\n                     type=\"checkbox\"\n                     name=\"idDone\"\n                     checked={item.isDone}\n                     onChange={()=> {}}/\n                     >\n                      {item.value}\n                      <button className=\"btn\" onClick={() => this.deleteItem(item.id)}>Delete</button>\n                  </li>\n                );\n              })}\n              <li>\n                <input type=\"checkbox\" name=\"\" id=\"\" />\n                Add Your todo's\n                <button className=\"btn\">Delete</button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}